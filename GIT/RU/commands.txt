git init   -> создать репозиторий
git status   -> посмотреть статус
git add .   -> добавить изменение
git commit -m '(text)'   -> подтвердить изменение
git pull   -> скачать
git push   -> залить на сервер

git config --list   -> посмотреть настройки

git branch   -> при запуске без параметров, список имеющихся у вас веток (* указывает на ветку, на которой вы находитесь в настоящий момент)
git branch -v   -> посмотреть последний коммит на каждой из веток, выполните команду
git branch --merged   -> ветки, которые вы уже слили с текущей
git branch --no-merged   -> ветки, которые вы не слили с текущей
git branch branchName   -> создание новой ветки branchName
git branch -d branchName   -> удаления ветки

git checkout branchName   -> переключить ветку на branchName
git checkout -b branchName   -> создать ветку и сразу переключиться на нее
git checkout --<file> -> заметить file в текущий ветке на file из мастера

git merge branchName   -> выполнить слияние
git mergetool   -> откроет визуальное средство, которое проведет вас по всем конфликтам

git diff -> посмотреть разницу между локальными и удаленными файлами

git reset HEAD~ -> продолжить работу с предыдущего коммита
git reset --hard HEAD -> отменить локальные Все Изменения
git revert bbbbbb cccccc dddddd -> откатить коммиты, которые запушили, можно перечислить отменяемые коммиты
git rm, mv -> удалить, переместить файл из git репозитория
git cherry-pick -> перенести коммит из одной ветки в другую

git log --oneline --decorate --graph --all   -> выдаст историю ваших коммитов и покажет, где находятся указатели ваших веток, и как ветвилась история проекта
